const all_data = {
    "detailed_data": {
        "数理科学部": {
            "数学": {
                "name": "数学",
                "受理项数": 187,
                "受理金额": 24310,
                "批准项数": 13,
                "批准金额": 1690
            },
            "力学": {
                "name": "力学",
                "受理项数": 131,
                "受理金额": 17030,
                "批准项数": 9,
                "批准金额": 1170
            },
            "天文学": {
                "name": "天文学",
                "受理项数": 62,
                "受理金额": 8060,
                "批准项数": 5,
                "批准金额": 650
            },
            "物理学I": {
                "name": "物理学I",
                "受理项数": 115,
                "受理金额": 14950,
                "批准项数": 12,
                "批准金额": 1560
            },
            "物理学II": {
                "name": "物理学II",
                "受理项数": 142,
                "受理金额": 18460,
                "批准项数": 8,
                "批准金额": 1040
            }
        },
        "化学科学部": {
            "合成化学": {
                "name": "合成化学",
                "受理项数": 117,
                "受理金额": 15210,
                "批准项数": 9,
                "批准金额": 1170
            },
            "催化与表界面化学": {
                "name": "催化与表界面化学",
                "受理项数": 45,
                "受理金额": 5850,
                "批准项数": 3,
                "批准金额": 390
            },
            "化学理论与机制": {
                "name": "化学理论与机制",
                "受理项数": 68,
                "受理金额": 8840,
                "批准项数": 5,
                "批准金额": 650
            },
            "化学测量学": {
                "name": "化学测量学",
                "受理项数": 112,
                "受理金额": 14560,
                "批准项数": 8,
                "批准金额": 1040
            },
            "材料化学与能源化学": {
                "name": "材料化学与能源化学",
                "受理项数": 112,
                "受理金额": 14560,
                "批准项数": 9,
                "批准金额": 1170
            },
            "环境化学": {
                "name": "环境化学",
                "受理项数": 103,
                "受理金额": 13390,
                "批准项数": 8,
                "批准金额": 1040
            },
            "化学生物学": {
                "name": "化学生物学",
                "受理项数": 60,
                "受理金额": 7800,
                "批准项数": 5,
                "批准金额": 650
            },
            "化学工程与工业化学": {
                "name": "化学工程与工业化学",
                "受理项数": 133,
                "受理金额": 17290,
                "批准项数": 10,
                "批准金额": 1300
            }
        },
        "生命科学部": {
            "微生物学、植物学": {
                "name": "微生物学、植物学",
                "受理项数": 102,
                "受理金额": 13260,
                "批准项数": 5,
                "批准金额": 650
            },
            "生态学、林学": {
                "name": "生态学、林学",
                "受理项数": 124,
                "受理金额": 16120,
                "批准项数": 6,
                "批准金额": 780
            },
            "生物物理、生化与生物分子学、生物力学与组织工程、免疫学": {
                "name": "生物物理、生化与生物分子学、生物力学与组织工程、免疫学",
                "受理项数": 111,
                "受理金额": 14430,
                "批准项数": 11,
                "批准金额": 1430
            },
            "神经、认识与心理学、生理学与整合生物学": {
                "name": "神经、认识与心理学、生理学与整合生物学",
                "受理项数": 69,
                "受理金额": 8970,
                "批准项数": 5,
                "批准金额": 650
            },
            "遗传学与生物信息学、细胞生物学、发育生物学与生殖生物学": {
                "name": "遗传学与生物信息学、细胞生物学、发育生物学与生殖生物学",
                "受理项数": 101,
                "受理金额": 13130,
                "批准项数": 8,
                "批准金额": 1040
            },
            "食品科学、农学基础与作物学": {
                "name": "食品科学、农学基础与作物学",
                "受理项数": 84,
                "受理金额": 10920,
                "批准项数": 5,
                "批准金额": 650
            },
            "植物保护学、园艺学与植物营养学": {
                "name": "植物保护学、园艺学与植物营养学",
                "受理项数": 61,
                "受理金额": 7930,
                "批准项数": 7,
                "批准金额": 910
            },
            "动物学、畜牧学与草地科学、兽医学、水产学": {
                "name": "动物学、畜牧学与草地科学、兽医学、水产学",
                "受理项数": 123,
                "受理金额": 15990,
                "批准项数": 11,
                "批准金额": 1430
            }
        },
        "地球科学部": {
            "地理学": {
                "name": "地理学",
                "受理项数": 111,
                "受理金额": 14430,
                "批准项数": 6,
                "批准金额": 780
            },
            "地质学": {
                "name": "地质学",
                "受理项数": 88,
                "受理金额": 11440,
                "批准项数": 6,
                "批准金额": 780
            },
            "地球化学": {
                "name": "地球化学",
                "受理项数": 21,
                "受理金额": 2730,
                "批准项数": 4,
                "批准金额": 520
            },
            "地球物理学和空间物理学": {
                "name": "地球物理学和空间物理学",
                "受理项数": 69,
                "受理金额": 8970,
                "批准项数": 5,
                "批准金额": 650
            },
            "大气科学学科": {
                "name": "大气科学学科",
                "受理项数": 52,
                "受理金额": 6760,
                "批准项数": 5,
                "批准金额": 650
            },
            "海洋科学": {
                "name": "海洋科学",
                "受理项数": 63,
                "受理金额": 8190,
                "批准项数": 5,
                "批准金额": 650
            },
            "环境地球科学和土壤学": {
                "name": "环境地球科学和土壤学",
                "受理项数": 154,
                "受理金额": 20020,
                "批准项数": 9,
                "批准金额": 1170
            }
        },
        "工程与材料学部": {
            "金属材料学科": {
                "name": "金属材料学科",
                "受理项数": 94,
                "受理金额": 12220,
                "批准项数": 7,
                "批准金额": 910
            },
            "无机非金属材料学科": {
                "name": "无机非金属材料学科",
                "受理项数": 138,
                "受理金额": 17940,
                "批准项数": 11,
                "批准金额": 1430
            },
            "有机高分子材料学科": {
                "name": "有机高分子材料学科",
                "受理项数": 102,
                "受理金额": 13260,
                "批准项数": 8,
                "批准金额": 1040
            },
            "冶金与矿业学科": {
                "name": "冶金与矿业学科",
                "受理项数": 106,
                "受理金额": 13780,
                "批准项数": 7,
                "批准金额": 910
            },
            "机械工程学科": {
                "name": "机械工程学科",
                "受理项数": 120,
                "受理金额": 15600,
                "批准项数": 9,
                "批准金额": 1170
            },
            "工程热物理与能源利用学科": {
                "name": "工程热物理与能源利用学科",
                "受理项数": 89,
                "受理金额": 11570,
                "批准项数": 6,
                "批准金额": 780
            },
            "电气科学与工程学科": {
                "name": "电气科学与工程学科",
                "受理项数": 77,
                "受理金额": 10010,
                "批准项数": 6,
                "批准金额": 780
            },
            "建筑环境与结构工程学科": {
                "name": "建筑环境与结构工程学科",
                "受理项数": 162,
                "受理金额": 21060,
                "批准项数": 12,
                "批准金额": 1560
            },
            "水利科学与海洋工程学科": {
                "name": "水利科学与海洋工程学科",
                "受理项数": 125,
                "受理金额": 16250,
                "批准项数": 8,
                "批准金额": 1040
            }
        },
        "信息科学部": {
            "电子学与信息系统": {
                "name": "电子学与信息系统",
                "受理项数": 245,
                "受理金额": 31850,
                "批准项数": 15,
                "批准金额": 1950
            },
            "计算机科学学科": {
                "name": "计算机科学学科",
                "受理项数": 122,
                "受理金额": 15860,
                "批准项数": 10,
                "批准金额": 1300
            },
            "自动化学科": {
                "name": "自动化学科",
                "受理项数": 249,
                "受理金额": 32370,
                "批准项数": 17,
                "批准金额": 2210
            },
            "半导体科学、光学和光电子学": {
                "name": "半导体科学、光学和光电子学",
                "受理项数": 253,
                "受理金额": 32890,
                "批准项数": 18,
                "批准金额": 2340
            }
        },
        "管理科学部": {
            "管理综合处": {
                "name": "管理综合处",
                "受理项数": 189,
                "受理金额": 24570,
                "批准项数": 14,
                "批准金额": 1820
            }
        },
        "医学科学部": {
            "医学一处": {
                "name": "医学一处",
                "受理项数": 58,
                "受理金额": 7540,
                "批准项数": 5,
                "批准金额": 650
            },
            "医学二处": {
                "name": "医学二处",
                "受理项数": 85,
                "受理金额": 11050,
                "批准项数": 7,
                "批准金额": 910
            },
            "医学三处": {
                "name": "医学三处",
                "受理项数": 53,
                "受理金额": 6890,
                "批准项数": 6,
                "批准金额": 780
            },
            "医学四处": {
                "name": "医学四处",
                "受理项数": 35,
                "受理金额": 4550,
                "批准项数": 3,
                "批准金额": 390
            },
            "医学五处": {
                "name": "医学五处",
                "受理项数": 67,
                "受理金额": 8710,
                "批准项数": 5,
                "批准金额": 650
            },
            "医学六处": {
                "name": "医学六处",
                "受理项数": 51,
                "受理金额": 6630,
                "批准项数": 4,
                "批准金额": 520
            },
            "医学七处": {
                "name": "医学七处",
                "受理项数": 101,
                "受理金额": 13130,
                "批准项数": 7,
                "批准金额": 910
            },
            "医学八处": {
                "name": "医学八处",
                "受理项数": 37,
                "受理金额": 4810,
                "批准项数": 3,
                "批准金额": 390
            },
            "医学九处": {
                "name": "医学九处",
                "受理项数": 82,
                "受理金额": 10660,
                "批准项数": 5,
                "批准金额": 650
            },
            "医学十处": {
                "name": "医学十处",
                "受理项数": 61,
                "受理金额": 7930,
                "批准项数": 5,
                "批准金额": 650
            }
        }
    },
    "corr_data": {
        "数理科学部": {
            "name": "数理科学部",
            "合计项数": 47,
            "合计金额": 6110,
            "教育部项数": 22,
            "教育部金额": 2860,
            "中国科学院项数": 12,
            "中国科学院金额": 1560,
            "工交农医国防等项数": 5,
            "工交农医国防等金额": 650,
            "各省项数": 8,
            "各省金额": 1040
        },
        "化学科学部": {
            "name": "化学科学部",
            "合计项数": 57,
            "合计金额": 7410,
            "教育部项数": 39,
            "教育部金额": 5070,
            "中国科学院项数": 11,
            "中国科学院金额": 1430,
            "工交农医国防等项数": 2,
            "工交农医国防等金额": 260,
            "各省项数": 5,
            "各省金额": 650
        },
        "生命科学部": {
            "name": "生命科学部",
            "合计项数": 58,
            "合计金额": 7540,
            "教育部项数": 31,
            "教育部金额": 4030,
            "中国科学院项数": 12,
            "中国科学院金额": 1560,
            "工交农医国防等项数": 5,
            "工交农医国防等金额": 650,
            "各省项数": 10,
            "各省金额": 1300
        },
        "地球科学部": {
            "name": "地球科学部",
            "合计项数": 40,
            "合计金额": 5200,
            "教育部项数": 15,
            "教育部金额": 1950,
            "中国科学院项数": 17,
            "中国科学院金额": 2210,
            "工交农医国防等项数": 5,
            "工交农医国防等金额": 650,
            "各省项数": 3,
            "各省金额": 390
        },
        "工程与材料学部": {
            "name": "工程与材料学部",
            "合计项数": 74,
            "合计金额": 9620,
            "教育部项数": 47,
            "教育部金额": 6110,
            "中国科学院项数": 10,
            "中国科学院金额": 1300,
            "工交农医国防等项数": 15,
            "工交农医国防等金额": 1950,
            "各省项数": 2,
            "各省金额": 260
        },
        "信息科学部": {
            "name": "信息科学部",
            "合计项数": 60,
            "合计金额": 7800,
            "教育部项数": 28,
            "教育部金额": 3640,
            "中国科学院项数": 8,
            "中国科学院金额": 1040,
            "工交农医国防等项数": 11,
            "工交农医国防等金额": 1430,
            "各省项数": 13,
            "各省金额": 1690
        },
        "管理科学部": {
            "name": "管理科学部",
            "合计项数": 14,
            "合计金额": 1820,
            "教育部项数": 11,
            "教育部金额": 1430,
            "中国科学院项数": 0,
            "中国科学院金额": 0,
            "工交农医国防等项数": 3,
            "工交农医国防等金额": 390,
            "各省项数": 0,
            "各省金额": 0
        },
        "医学科学部": {
            "name": "医学科学部",
            "合计项数": 50,
            "合计金额": 6500,
            "教育部项数": 29,
            "教育部金额": 3770,
            "中国科学院项数": 5,
            "中国科学院金额": 650,
            "工交农医国防等项数": 9,
            "工交农医国防等金额": 1170,
            "各省项数": 7,
            "各省金额": 910
        }
    },
    "prop_data": {
        "数理科学部": {
            "name": "数理科学部",
            "合计项数": 47,
            "合计金额": 6110,
            "高等院校项数": 39,
            "高等院校金额": 5070,
            "科研单位项数": 8,
            "科研单位金额": 1040,
            "其他项数": 0,
            "其他金额": 0
        },
        "化学科学部": {
            "name": "化学科学部",
            "合计项数": 57,
            "合计金额": 7410,
            "高等院校项数": 47,
            "高等院校金额": 6110,
            "科研单位项数": 10,
            "科研单位金额": 1300,
            "其他项数": 0,
            "其他金额": 0
        },
        "生命科学部": {
            "name": "生命科学部",
            "合计项数": 58,
            "合计金额": 7540,
            "高等院校项数": 40,
            "高等院校金额": 5200,
            "科研单位项数": 18,
            "科研单位金额": 2340,
            "其他项数": 0,
            "其他金额": 0
        },
        "地球科学部": {
            "name": "地球科学部",
            "合计项数": 40,
            "合计金额": 5200,
            "高等院校项数": 24,
            "高等院校金额": 3120,
            "科研单位项数": 16,
            "科研单位金额": 2080,
            "其他项数": 0,
            "其他金额": 0
        },
        "工程与材料学部": {
            "name": "工程与材料学部",
            "合计项数": 74,
            "合计金额": 9620,
            "高等院校项数": 61,
            "高等院校金额": 7930,
            "科研单位项数": 13,
            "科研单位金额": 1690,
            "其他项数": 0,
            "其他金额": 0
        },
        "信息科学部": {
            "name": "信息科学部",
            "合计项数": 60,
            "合计金额": 7800,
            "高等院校项数": 55,
            "高等院校金额": 7150,
            "科研单位项数": 5,
            "科研单位金额": 650,
            "其他项数": 0,
            "其他金额": 0
        },
        "管理科学部": {
            "name": "管理科学部",
            "合计项数": 14,
            "合计金额": 1820,
            "高等院校项数": 14,
            "高等院校金额": 1820,
            "科研单位项数": 0,
            "科研单位金额": 0,
            "其他项数": 0,
            "其他金额": 0
        },
        "医学科学部": {
            "name": "医学科学部",
            "合计项数": 50,
            "合计金额": 6500,
            "高等院校项数": 39,
            "高等院校金额": 5070,
            "科研单位项数": 10,
            "科研单位金额": 1300,
            "其他项数": 1,
            "其他金额": 130
        }
    },
    "loc_data": {
        "北京": {
            "地区": "北京",
            "合计项数": 130,
            "合计金额": 16900,
            "数理科学部项数": 17.0,
            "数理科学部金额": 2210.0,
            "化学科学部项数": 18.0,
            "化学科学部金额": 2340.0,
            "生命科学部项数": 18.0,
            "生命科学部金额": 2340.0,
            "地球科学部项数": 16.0,
            "地球科学部金额": 2080.0,
            "工程与材料学部项数": 25.0,
            "工程与材料学部金额": 3250.0,
            "信息科学部项数": 21.0,
            "信息科学部金额": 2730.0,
            "管理科学部项数": 6.0,
            "管理科学部金额": 780.0,
            "医学科学部项数": 9.0,
            "医学科学部金额": 1170.0
        },
        "上海": {
            "地区": "上海",
            "合计项数": 49,
            "合计金额": 6370,
            "数理科学部项数": 4.0,
            "数理科学部金额": 520.0,
            "化学科学部项数": 8.0,
            "化学科学部金额": 1040.0,
            "生命科学部项数": 8.0,
            "生命科学部金额": 1040.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 5.0,
            "工程与材料学部金额": 650.0,
            "信息科学部项数": 8.0,
            "信息科学部金额": 1040.0,
            "管理科学部项数": 1.0,
            "管理科学部金额": 130.0,
            "医学科学部项数": 14.0,
            "医学科学部金额": 1820.0
        },
        "江苏": {
            "地区": "江苏",
            "合计项数": 34,
            "合计金额": 4420,
            "数理科学部项数": 6.0,
            "数理科学部金额": 780.0,
            "化学科学部项数": 5.0,
            "化学科学部金额": 650.0,
            "生命科学部项数": 6.0,
            "生命科学部金额": 780.0,
            "地球科学部项数": 3.0,
            "地球科学部金额": 390.0,
            "工程与材料学部项数": 4.0,
            "工程与材料学部金额": 520.0,
            "信息科学部项数": 5.0,
            "信息科学部金额": 650.0,
            "管理科学部项数": 2.0,
            "管理科学部金额": 260.0,
            "医学科学部项数": 3.0,
            "医学科学部金额": 390.0
        },
        "广东": {
            "地区": "广东",
            "合计项数": 29,
            "合计金额": 3770,
            "数理科学部项数": 3.0,
            "数理科学部金额": 390.0,
            "化学科学部项数": 6.0,
            "化学科学部金额": 780.0,
            "生命科学部项数": 5.0,
            "生命科学部金额": 650.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 4.0,
            "工程与材料学部金额": 520.0,
            "信息科学部项数": 2.0,
            "信息科学部金额": 260.0,
            "管理科学部项数": 2.0,
            "管理科学部金额": 260.0,
            "医学科学部项数": 6.0,
            "医学科学部金额": 780.0
        },
        "湖北": {
            "地区": "湖北",
            "合计项数": 22,
            "合计金额": 2860,
            "数理科学部项数": 3.0,
            "数理科学部金额": 390.0,
            "化学科学部项数": 3.0,
            "化学科学部金额": 390.0,
            "生命科学部项数": 5.0,
            "生命科学部金额": 650.0,
            "地球科学部项数": 2.0,
            "地球科学部金额": 260.0,
            "工程与材料学部项数": 3.0,
            "工程与材料学部金额": 390.0,
            "信息科学部项数": 2.0,
            "信息科学部金额": 260.0,
            "管理科学部项数": 1.0,
            "管理科学部金额": 130.0,
            "医学科学部项数": 3.0,
            "医学科学部金额": 390.0
        },
        "安徽": {
            "地区": "安徽",
            "合计项数": 18,
            "合计金额": 2340,
            "数理科学部项数": 5.0,
            "数理科学部金额": 650.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 5.0,
            "地球科学部金额": 650.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 5.0,
            "信息科学部金额": 650.0,
            "管理科学部项数": 1.0,
            "管理科学部金额": 130.0,
            "医学科学部项数": 1.0,
            "医学科学部金额": 130.0
        },
        "浙江": {
            "地区": "浙江",
            "合计项数": 18,
            "合计金额": 2340,
            "数理科学部项数": 2.0,
            "数理科学部金额": 260.0,
            "化学科学部项数": 2.0,
            "化学科学部金额": 260.0,
            "生命科学部项数": 5.0,
            "生命科学部金额": 650.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 3.0,
            "工程与材料学部金额": 390.0,
            "信息科学部项数": 3.0,
            "信息科学部金额": 390.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 2.0,
            "医学科学部金额": 260.0
        },
        "四川": {
            "地区": "四川",
            "合计项数": 15,
            "合计金额": 1950,
            "数理科学部项数": 2.0,
            "数理科学部金额": 260.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 2.0,
            "地球科学部金额": 260.0,
            "工程与材料学部项数": 4.0,
            "工程与材料学部金额": 520.0,
            "信息科学部项数": 2.0,
            "信息科学部金额": 260.0,
            "管理科学部项数": 1.0,
            "管理科学部金额": 130.0,
            "医学科学部项数": 2.0,
            "医学科学部金额": 260.0
        },
        "山东": {
            "地区": "山东",
            "合计项数": 11,
            "合计金额": 1430,
            "数理科学部项数": 1.0,
            "数理科学部金额": 130.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 3.0,
            "地球科学部金额": 390.0,
            "工程与材料学部项数": 3.0,
            "工程与材料学部金额": 390.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 2.0,
            "医学科学部金额": 260.0
        },
        "福建": {
            "地区": "福建",
            "合计项数": 10,
            "合计金额": 1300,
            "数理科学部项数": 1.0,
            "数理科学部金额": 130.0,
            "化学科学部项数": 2.0,
            "化学科学部金额": 260.0,
            "生命科学部项数": 3.0,
            "生命科学部金额": 390.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 1.0,
            "工程与材料学部金额": 130.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 1.0,
            "医学科学部金额": 130.0
        },
        "黑龙江": {
            "地区": "黑龙江",
            "合计项数": 10,
            "合计金额": 1300,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 5.0,
            "工程与材料学部金额": 650.0,
            "信息科学部项数": 3.0,
            "信息科学部金额": 390.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "重庆": {
            "地区": "重庆",
            "合计项数": 9,
            "合计金额": 1170,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 3.0,
            "化学科学部金额": 390.0,
            "生命科学部项数": 2.0,
            "生命科学部金额": 260.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 2.0,
            "工程与材料学部金额": 260.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 2.0,
            "医学科学部金额": 260.0
        },
        "湖南": {
            "地区": "湖南",
            "合计项数": 8,
            "合计金额": 1040,
            "数理科学部项数": 2.0,
            "数理科学部金额": 260.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 5.0,
            "工程与材料学部金额": 650.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 1.0,
            "医学科学部金额": 130.0
        },
        "吉林": {
            "地区": "吉林",
            "合计项数": 7,
            "合计金额": 910,
            "数理科学部项数": 1.0,
            "数理科学部金额": 130.0,
            "化学科学部项数": 2.0,
            "化学科学部金额": 260.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 2.0,
            "工程与材料学部金额": 260.0,
            "信息科学部项数": 2.0,
            "信息科学部金额": 260.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "辽宁": {
            "地区": "辽宁",
            "合计项数": 7,
            "合计金额": 910,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 2.0,
            "化学科学部金额": 260.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 3.0,
            "工程与材料学部金额": 390.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "天津": {
            "地区": "天津",
            "合计项数": 6,
            "合计金额": 780,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 3.0,
            "工程与材料学部金额": 390.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 1.0,
            "医学科学部金额": 130.0
        },
        "陕西": {
            "地区": "陕西",
            "合计项数": 6,
            "合计金额": 780,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 2.0,
            "工程与材料学部金额": 260.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 2.0,
            "医学科学部金额": 260.0
        },
        "甘肃": {
            "地区": "甘肃",
            "合计项数": 4,
            "合计金额": 520,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 3.0,
            "地球科学部金额": 390.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "河南": {
            "地区": "河南",
            "合计项数": 2,
            "合计金额": 260,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 1.0,
            "医学科学部金额": 130.0
        },
        "山西": {
            "地区": "山西",
            "合计项数": 2,
            "合计金额": 260,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 1.0,
            "化学科学部金额": 130.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "江西": {
            "地区": "江西",
            "合计项数": 1,
            "合计金额": 130,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 1.0,
            "信息科学部金额": 130.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "贵州": {
            "地区": "贵州",
            "合计项数": 1,
            "合计金额": 130,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 0.0,
            "生命科学部金额": 0.0,
            "地球科学部项数": 1.0,
            "地球科学部金额": 130.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        },
        "云南": {
            "地区": "云南",
            "合计项数": 1,
            "合计金额": 130,
            "数理科学部项数": 0.0,
            "数理科学部金额": 0.0,
            "化学科学部项数": 0.0,
            "化学科学部金额": 0.0,
            "生命科学部项数": 1.0,
            "生命科学部金额": 130.0,
            "地球科学部项数": 0.0,
            "地球科学部金额": 0.0,
            "工程与材料学部项数": 0.0,
            "工程与材料学部金额": 0.0,
            "信息科学部项数": 0.0,
            "信息科学部金额": 0.0,
            "管理科学部项数": 0.0,
            "管理科学部金额": 0.0,
            "医学科学部项数": 0.0,
            "医学科学部金额": 0.0
        }
    }
}

var all_keys = ['数理科学部', '化学科学部', '生命科学部', '地球科学部',
    '工程与材料学部', '信息科学部', '管理科学部', '医学科学部'];
var all_modals = [];
var curr_key;
var corrdata = 0;
var propdata = 0;

function handleDetailData() {
    d3.select("#corr_data0").style("display", "none");
    d3.select("#corr_data1").style("display", "none");
    d3.select("#prop_data0").style("display", "none");
    d3.select("#prop_data1").style("display", "none");
    d3.select("#svg-DetailData-main").style("display", "block");
    // console.log('detail_data')
}

function handleCorrData() {
    d3.select("#corr_data0").style("display", "none");
    d3.select("#corr_data1").style("display", "none");
    d3.select("#prop_data0").style("display", "none");
    d3.select("#prop_data1").style("display", "none");
    d3.select("#svg-DetailData-main").style("display", "none");
    d3.select("#loc_data").style("display", "none");
    d3.select("#corr_data" + d3.select("#axis_button").attr("curr_corr")).style("display", "block");
    // console.log('corr_data');
}

function handlePropData() {
    d3.select("#corr_data0").style("display", "none");
    d3.select("#corr_data1").style("display", "none");
    d3.select("#prop_data0").style("display", "none");
    d3.select("#prop_data1").style("display", "none");
    d3.select("#svg-DetailData-main").style("display", "none");
    d3.select("#loc_data").style("display", "none");
    d3.select("#prop_data" + d3.select("#axis_button").attr("curr_prop")).style("display", "block");
    // console.log('prop_data');
}

function handleLocData() {
    // console.log('loc_data');
    d3.select("#corr_data0").style("display", "none");
    d3.select("#corr_data1").style("display", "none");
    d3.select("#prop_data0").style("display", "none");
    d3.select("#prop_data1").style("display", "none");
    d3.select("#svg-DetailData-main").style("display", "none");
    d3.select("#loc_data").style("display", "block");
}

function handleclick(key_i) {
    // 获取弹窗
    // // console.log(key_i);
    var key = all_keys[Math.floor(key_i / 2)];
    curr_key = key
    var modal = document.getElementById('DetailData-Modal');
    modal.style.display = 'block';
    d3.select("#DetailData-Modal" + key).style("display", "block");
}


function handleNumberClick() {
    var button = d3.select("#number_button");
    var curr = button.attr("curr");
    if (curr == 'display') {
        button.attr("curr", "none");
        button.text("显示数字");
        d3.selectAll(".numbers")
            .style("display", "none");
    }
    else {
        button.attr("curr", "display");
        button.text("隐藏数字");
        d3.selectAll(".numbers")
            .style("display", "block");
    }
}

function handleAxisChangeClick() {
    var button = d3.select("#axis_button");
    var curr = button.attr("curr_" + button.attr("curr_value").substr(0, 4));
    // console.log("#" + button.attr("curr_value") + curr);
    // console.log("#" + button.attr("curr_value") + "1")
    if (curr == '0') {
        d3.select("#" + button.attr("curr_value") + curr).style("display", "none");
        button.attr("curr_" + button.attr("curr_value").substr(0, 4), "1");
        d3.select("#" + button.attr("curr_value") + "1").style("display", "block");
    }
    else {
        d3.select("#" + button.attr("curr_value") + curr).style("display", "none");
        button.attr("curr_" + button.attr("curr_value").substr(0, 4), "0");
        d3.select("#" + button.attr("curr_value") + "0").style("display", "block");
    }
}


function initializeDetailData() {
    // console.log("initializing detail data")
    var upper = 120;
    var bottom = 100;
    var left = 200;
    var color = ['#5DC0E1', '#5DE180']
    var alignment = 80
    var width = 1200;  //画布的宽度
    var height = 800;   //画布的高度
    var rectHeight = 50;   //每个矩形所占的像素高度(包括空白)

    var detailed_data_all = [];
    var detailed_data_pass = [];
    for (key in all_data['detailed_data']) {
        item = all_data['detailed_data'][key];
        var sum_all = 0;
        var sum_pass = 0;
        for (key2 in item) {
            sum_all += item[key2]['受理项数'];
            sum_pass += item[key2]['批准项数'];
        }
        detailed_data_all.push(sum_all);
        detailed_data_pass.push(sum_pass);
    }
    // // console.log(detailed_data_all);
    // // console.log(detailed_data_pass);
    var detailed_data_mixed = [];
    for (let i = 0; i < detailed_data_all.length; ++i) {
        detailed_data_mixed.push(detailed_data_all[i]);
        detailed_data_mixed.push(detailed_data_pass[i]);
    }
    // // console.log(detailed_data_mixed);
    var min = d3.min(detailed_data_mixed);
    var max = d3.max(detailed_data_mixed);
    var yScale = d3.scaleLinear()
        .domain([0, max])
        .range([height - upper - bottom, 0]);

    var linear_all = d3.scaleLinear()
        .domain([0, max])
        .range([0, height - upper - bottom]);
    // var linear_pass = d3.scaleLinear()
    //     .domain([d3.min(detailed_data_pass), d3.max(detailed_data_pass)])
    //     .range([10, 100])
    var linear_pass = linear_all;
    var yAxis = d3.axisLeft(yScale);
    let blank_tmp = alignment / 2;
    let x = d3.scaleOrdinal().range([0
        , 1 * rectHeight - 10 + blank_tmp
        , 3 * rectHeight - 10 + blank_tmp
        , 5 * rectHeight - 10 + blank_tmp
        , 7 * rectHeight - 10 + blank_tmp
        , 9 * rectHeight - 10 + blank_tmp
        , 11 * rectHeight - 10 + blank_tmp
        , 13 * rectHeight - 10 + blank_tmp
        , 15 * rectHeight - 10 + blank_tmp]);
    let xScale = x.domain(['', '数理科学部', '化学科学部', '生命科学部', '地球科学部',
        '工程与材料学部', '信息科学部', '管理科学部', '医学科学部'])

    var xAxis = d3.axisBottom(xScale);

    var svg = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", width)       //设定宽度
        .attr("height", height)    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "svg-DetailData-main")
        .style("clear", "both");

    svg.selectAll("myrect")
        .data(detailed_data_mixed)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return left + alignment + ((i % 2 == 0) ? i * rectHeight : (i * rectHeight - 10));
        })
        .attr("y", function (d, i) {
            return height - ((i % 2 == 0) ? linear_all(d) : linear_pass(d)) - bottom;
        })
        .attr("width", rectHeight - 10)
        .attr("height", function (d, i) {
            return (i % 2 == 0) ? linear_all(d) : linear_pass(d);
        })
        .attr("fill", function (d, i) {
            return color[i % 2];
        })
        .attr("class", "svg-DetailData-main")
        .attr("onclick", function (d, i) {
            return "handleclick(" + i + ")";
        })
        .style("cursor", "pointer")
        .append("title")
        .text("点击查看详情");
    svg.selectAll("myrect")
        .data(detailed_data_mixed)
        .enter()
        .append("text")
        .attr("class", "numbers")
        .attr("transform", "translate(" + (left + alignment) + "," + upper + ")")
        .attr("x", function (d, i) {
            let tmp = 0;
            if (d >= 1000) tmp = 0;
            else if (d >= 100) tmp = 5;
            else tmp = 10;
            return ((i % 2 == 0) ? i * rectHeight : (i * rectHeight - 10)) + tmp;
        })
        .attr("y", function (d) {
            return yScale(d) - 10;
        })
        .attr("alignment-baseline", "middle")
        .text(function (d) {
            return d;
        });
    svg.append("g")
        .attr("class", "Yaxis")
        .attr("transform", "translate(" + (left + alignment / 2) + "," + upper + " )")
        .call(yAxis);
    svg.append("g")
        .attr("class", "Xaxis")
        .attr("transform", "translate(" + (left + alignment / 2) + "," + (height - bottom) + " )")
        .call(xAxis)
        .style("font-size", "10px");
    svg.append("rect")
        .attr("x", 800 + left)
        .attr("y", 20)
        .attr("width", 60)
        .attr("height", 20)
        .attr("class", "legend_block")
        .style("fill", color[0]);
    svg.append("rect")
        .attr("x", 800 + left)
        .attr("y", 50)
        .attr("width", 60)
        .attr("height", 20)
        .attr("class", "legend_block")
        .style("fill", color[1]);
    svg.append("text")
        .attr("x", 880 + left)
        .attr("y", 30)
        .attr("class", "legend_text")
        .text("全部申请")
        .style("font-size", "15px")
        .attr("alignment-baseline", "middle")
    svg.append("text")
        .attr("x", 880 + left)
        .attr("y", 60)
        .attr("class", "legend_text")
        .text("已批准申请")
        .style("font-size", "15px")
        .attr("alignment-baseline", "middle")
    svg.append("text")
        .attr("x", 20 + left).attr("y", 100)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "middle")
    svg.append("text")
        .attr("x", 20 + left + 5 * rectHeight).attr("y", 20)
        .text("点击矩形可以获得详细信息")
        .style("font-size", "30px")
        .attr("alignment-baseline", "middle")
    for (key in all_data['detailed_data']) {
        var local_settings = {
            upper: 50,
            bottom: 50,
            left: 50,
            right: 50,
        }
        var rect_settings = {
            width: 24,
            space: 4,
        }
        var item = all_data['detailed_data'][key];
        // // console.log(d3.selectAll("#DetailData-Modal"))
        var modal_svg = d3.select("#DetailData-Modal").select("div")
            .append("svg")          //添加一个svg元素
            .attr("width", 550)       //设定宽度
            .attr("height", 550)    //设定高度
            .attr("style", "text-align: center; display: none")
            .attr("id", "DetailData-Modal" + key);
        var modal_all = [];
        var modal_pass = [];
        var modal_mixed = [];
        var key2s = [''];
        var all_key2s = [];
        for (key2 in item) {
            let tmp_key2 = key2;
            if (key2.length > 5) tmp_key2 = key2.substr(0, 3) + '...';
            all_key2s.push(key2);
            key2s.push(tmp_key2);
            modal_all.push(item[key2]['受理项数']);
            modal_mixed.push(item[key2]['受理项数']);
            modal_pass.push(item[key2]['批准项数']);
            modal_mixed.push(item[key2]['批准项数']);
        }
        // // console.log(modal_all);
        // // console.log(modal_pass);
        // // console.log(modal_mixed);
        rect_settings['min'] = d3.min(modal_mixed);
        rect_settings['max'] = d3.max(modal_mixed);
        rect_settings['left-margin'] = (550 - rect_settings['width'] * modal_mixed.length) / 2
        rect_settings['scale_func'] = d3.scaleLinear()
            .domain([0, rect_settings['max']])
            .range([0, 550 - local_settings['upper'] - local_settings['bottom']]);
        rect_settings['yScale'] = d3.scaleLinear()
            .domain([0, rect_settings['max']])
            .range([550 - local_settings['upper'] - local_settings['bottom'], 0]);
        rect_settings['yAxis'] = d3.axisLeft(rect_settings['yScale']);
        rect_settings['px_scale'] = [0];
        for (let i = 0; i < key2s.length - 1; ++i) {
            rect_settings['px_scale']
                .push(5 + (2 * i + 1) * rect_settings['width'] - rect_settings['space']);
        }
        // // console.log(rect_settings['px_scale'])
        // // console.log(key2s)
        let tmp_xScale = d3.scaleOrdinal().range(rect_settings['px_scale']).domain(key2s);
        rect_settings['xAxis'] = d3.axisBottom(tmp_xScale);
        modal_svg.append("text")
            .attr("x", 10)
            .attr("y", 10)
            .text("\"" + key + "\"" + "资金明细")
            .style("font-size", "15px")
            .attr("alignment-baseline", "middle");
        modal_svg.selectAll("myrect" + key)
            .data(modal_mixed)
            .enter()
            .append("rect")
            .attr("x", function (d, i) {
                return (rect_settings['left-margin'] +
                    ((i % 2 == 0) ?
                        (i * rect_settings['width'])
                        : (i * rect_settings['width'] - rect_settings['space'])));
            })
            .attr("y", function (d, i) {
                return 550 - rect_settings['scale_func'](d) - local_settings['bottom'];
            })
            .attr("width", rect_settings['width'] - rect_settings['space'])
            .attr("height", function (d, i) {
                return rect_settings['scale_func'](d);
            })
            .attr("fill", function (d, i) {
                return color[i % 2];
            })
            .attr("class", "svg-DetailData-main" + key)
            .append("title")
            .text(function (d, i) {
                return all_key2s[Math.floor(i / 2)];
            });
        modal_svg.selectAll("myrect" + key)
            .data(modal_mixed)
            .enter()
            .append("text")
            .attr("class", "numbers")
            .attr("transform",
                "translate(" + rect_settings['left-margin'] + "," + local_settings['upper'] + ")")
            .attr("x", function (d, i) {
                return ((i % 2 == 0) ? i * rect_settings['width']
                    : i * rect_settings['width'] - rect_settings['space']);
            })
            .attr("y", function (d) {
                return rect_settings['yScale'](d) - 8;
            })
            .attr("alignment-baseline", "middle")
            .text(function (d) {
                return d;
            });
        modal_svg.append("g")
            .attr("class", "modal_Yaxis")
            .attr("transform",
                "translate(" + (rect_settings['left-margin'] - 5) + "," + local_settings['upper'] + " )")
            .call(rect_settings['yAxis']);
        modal_svg.append("g")
            .attr("class", "modal_Xaxis")
            .attr("transform",
                "translate(" + (rect_settings['left-margin'] - 5) + "," + (550 - local_settings['bottom']) + " )")
            .call(rect_settings['xAxis'])
            .style("font-size", "10px");
        modal_svg.append("text")
            .attr("x", rect_settings['left-margin'] - 20).attr("y", local_settings["upper"] - 3)
            .text("项数(个)")
            .style("font-size", "15px")
            .attr("alignment-baseline", "bottom")
    }
}

function initializeCorrData() {
    // console.log("initializing corr data");
    var svg_settings = {
        width: 1200,
        height: 800,
    };
    var rect_settings = {
        leftmargin: 300,
        upper: 100,
        bottom: 100,
        width: 75,
        space: 30,
    };
    var rect_settings0 = {
        leftmargin: 300,
        upper: 100,
        bottom: 100,
        width: 125,
        space: 50,
    };
    var corr_color1 = ['#F9B7B0', '#F9DEB0', '#E8F9B0', '#B0F9D3']
    var corr_color0 = ['#F9B7B0', '#F9DEB0', '#E8F9B0', '#B0F9D3',
        '#B0E5F9', '#B0C5F9', '#CBB0F9', '#F9B0ED']
    var legend_keys = ['教育部项数', '中国科学院项数', '工交农医国防等项数', '各省项数']

    var svg0 = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", svg_settings['width'])       //设定宽度
        .attr("height", svg_settings['height'])    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "corr_data0")
        .style("clear", "both");
    var corr_data_mixed0 = [];
    var multiply0 = [];
    var tmp_cnt0 = 0;
    var sums0 = [];
    for (key2 in legend_keys) {
        let tmp_sum = 0;
        for (key in all_data['corr_data']) {
            corr_data_mixed0.push(all_data['corr_data'][key][legend_keys[key2]]);
            multiply0.push(Math.floor(tmp_cnt0 / 8));
            tmp_cnt0 += 1;
            tmp_sum += all_data['corr_data'][key][legend_keys[key2]]
        }
        sums0.push(tmp_sum);
    }
    // console.log(sums0);
    // console.log(multiply0);
    var linear_func0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([0, svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom']]);
    var yScale0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom'], 0]);
    var yAxis0 = d3.axisLeft(yScale0);
    var tmp_all_keys0 = [''].concat(legend_keys);
    var tmp_scale_px0 = [0];
    for (let i = 0; i < tmp_all_keys0.length - 1; ++i) {
        tmp_scale_px0.push(10 + i * rect_settings0["width"] +
            0.5 * (rect_settings0["width"] - rect_settings0['space']));
    }
    let tmp_xScale0 = d3.scaleOrdinal().range(tmp_scale_px0).domain(tmp_all_keys0);
    svg0.selectAll("myrect-corr-data")
        .data(corr_data_mixed0)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return rect_settings0["leftmargin"] + multiply0[i] * rect_settings0["width"];
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 8); ++j) {
                tmp += linear_func0(corr_data_mixed0[8 * Math.floor(i / 8) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func0(sums0[Math.floor(i / 8)])
                + tmp -
                rect_settings0['bottom'];
        })
        .attr("width", rect_settings0["width"] - rect_settings0["space"])
        .attr("height", function (d, i) {
            return linear_func0(d);
        })
        .attr("fill", function (d, i) {
            return corr_color0[i % 8];
        })
        .append("title")
        .text(function (d, i) {
            return legend_keys[Math.floor(i / 8)];
        });
    svg0.append("g")
        .attr("class", "CorrData_Yaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," + rect_settings0['upper'] + " )")
        .call(yAxis0);
    svg0.append("g")
        .attr("class", "modal_Xaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," +
            (svg_settings["height"] - rect_settings0['bottom']) + " )")
        .call(d3.axisBottom(tmp_xScale0))
        .style("font-size", "10px");
    svg0.selectAll("myrect-corr-data")
        .data(corr_data_mixed0)
        .enter()
        .append("text")
        .attr("class", "numbers")
        .attr("transform",
            "translate(" + rect_settings0['leftmargin'] + ", 0)")
        .attr("x", function (d, i) {
            return multiply0[i] * rect_settings0["width"] + 12.5;
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 8); ++j) {
                tmp += linear_func0(corr_data_mixed0[8 * Math.floor(i / 8) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func0(sums0[Math.floor(i / 8)])
                + tmp -
                rect_settings0['bottom'] - 3;
        })
        .attr("alignment-baseline", "bottom")
        .text(function (d) {
            if (d == 0) return '';
            return d;
        })
        .attr("fill", "black")
        .style("font-size", "15px");
    svg0.append("text")
        .attr("x", rect_settings0["leftmargin"] - 40)
        .attr("y", rect_settings0["upper"] - 20)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "bottom")
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("rect")
        .attr("class", "lagend_rect")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 300)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30;
        })
        .attr("fill", function (d, i) { return corr_color0[i % 8] });
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("text")
        .attr("class", "lagend_text")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 220)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30 + 10;
        })
        .text(function (d) { return d })
        .attr("alignment-baseline", "middle");



    var svg = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", svg_settings['width'])       //设定宽度
        .attr("height", svg_settings['height'])    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "corr_data1")
        .style("clear", "both");
    var corr_data_mixed = [];
    var multiply = [];
    var tmp_cnt = 0;
    var sums = [];
    for (key in all_data['corr_data']) {
        var item = all_data['corr_data'][key];
        for (key2 in legend_keys) {
            corr_data_mixed.push(item[legend_keys[key2]]);
            multiply.push(Math.floor(tmp_cnt / 4));
            tmp_cnt += 1;
        }
        sums.push(item["合计项数"])
    }
    // console.log(corr_data_mixed)
    // console.log(multiply)
    // console.log(sums)
    var linear_func = d3.scaleLinear()
        .domain([0, d3.max(sums)])
        .range([0, svg_settings['height'] - rect_settings['upper'] - rect_settings['bottom']]);
    var yScale = d3.scaleLinear()
        .domain([0, d3.max(sums)])
        .range([svg_settings['height'] - rect_settings['upper'] - rect_settings['bottom'], 0]);
    var yAxis = d3.axisLeft(yScale);
    var tmp_all_keys = [''].concat(all_keys);
    var tmp_scale_px = [0];
    for (let i = 0; i < tmp_all_keys.length - 1; ++i) {
        tmp_scale_px.push(10 + i * rect_settings["width"] +
            0.5 * (rect_settings["width"] - rect_settings['space']));
    }
    let tmp_xScale = d3.scaleOrdinal().range(tmp_scale_px).domain(tmp_all_keys);
    svg.selectAll("myrect-corr-data")
        .data(corr_data_mixed)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return rect_settings["leftmargin"] + multiply[i] * rect_settings["width"];
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 4); ++j) {
                tmp += linear_func(corr_data_mixed[4 * Math.floor(i / 4) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func(sums[Math.floor(i / 4)])
                + tmp -
                rect_settings['bottom'];
        })
        .attr("width", rect_settings["width"] - rect_settings["space"])
        .attr("height", function (d, i) {
            return linear_func(d);
        })
        .attr("fill", function (d, i) {
            return corr_color1[i % 4];
        })
        .append("title")
        .text(function (d, i) {
            return all_keys[Math.floor(i / 4)]
        });
    svg.append("g")
        .attr("class", "CorrData_Yaxis")
        .attr("transform",
            "translate(" + (rect_settings['leftmargin'] - 10) + "," + rect_settings['upper'] + " )")
        .call(yAxis);
    svg.append("g")
        .attr("class", "modal_Xaxis")
        .attr("transform",
            "translate(" + (rect_settings['leftmargin'] - 10) + "," +
            (svg_settings["height"] - rect_settings['bottom']) + " )")
        .call(d3.axisBottom(tmp_xScale))
        .style("font-size", "10px");
    svg.selectAll("myrect-corr-data")
        .data(corr_data_mixed)
        .enter()
        .append("text")
        .attr("class", "numbers")
        .attr("transform",
            "translate(" + rect_settings['leftmargin'] + ", 0)")
        .attr("x", function (d, i) {
            return multiply[i] * rect_settings["width"] + 12.5;
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 4); ++j) {
                tmp += linear_func(corr_data_mixed[4 * Math.floor(i / 4) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func(sums[Math.floor(i / 4)])
                + tmp -
                rect_settings['bottom'] - 3;
        })
        .attr("alignment-baseline", "bottom")
        .text(function (d) {
            if (d == 0) return '';
            return d;
        })
        .attr("fill", "black")
        .style("font-size", "15px");
    svg.append("text")
        .attr("x", rect_settings["leftmargin"] - 40)
        .attr("y", rect_settings["upper"] - 20)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "bottom")
    svg.selectAll("legend")
        .data(legend_keys)
        .enter()
        .append("rect")
        .attr("class", "lagend_rect")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 300)
        .attr("y", function (d, i) {
            return rect_settings["upper"] + i * 30;
        })
        .attr("fill", function (d, i) { return corr_color1[i % 4] });
    svg.selectAll("legend")
        .data(legend_keys)
        .enter()
        .append("text")
        .attr("class", "lagend_text")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 220)
        .attr("y", function (d, i) {
            return rect_settings["upper"] + i * 30 + 10;
        })
        .text(function (d) { return d })
        .attr("alignment-baseline", "middle");
}

function initializePropData() {
    // console.log("initializing prop data");
    var svg_settings = {
        width: 1200,
        height: 800,
    };
    var rect_settings = {
        leftmargin: 300,
        upper: 100,
        bottom: 100,
        width: 75,
        space: 30,
    };
    var rect_settings0 = {
        leftmargin: 300,
        upper: 100,
        bottom: 100,
        width: 125,
        space: 50,
    };
    var prop_color1 = ['#F9B7B0', '#F9DEB0', '#E8F9B0', '#B0F9D3']
    var prop_color0 = ['#F9B7B0', '#F9DEB0', '#E8F9B0', '#B0F9D3',
        '#B0E5F9', '#B0C5F9', '#CBB0F9', '#F9B0ED']
    var legend_keys = ['高等院校项数', '科研单位项数', '其他项数']

    var svg0 = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", svg_settings['width'])       //设定宽度
        .attr("height", svg_settings['height'])    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "prop_data0")
        .style("clear", "both");
    var prop_data_mixed0 = [];
    var multiply0 = [];
    var tmp_cnt0 = 0;
    var sums0 = [];
    for (key2 in legend_keys) {
        let tmp_sum = 0;
        for (key in all_data['prop_data']) {
            prop_data_mixed0.push(all_data['prop_data'][key][legend_keys[key2]]);
            multiply0.push(Math.floor(tmp_cnt0 / 8));
            tmp_cnt0 += 1;
            tmp_sum += all_data['prop_data'][key][legend_keys[key2]]
        }
        sums0.push(tmp_sum);
    }
    // console.log(sums0);
    // console.log(multiply0);
    var linear_func0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([0, svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom']]);
    var yScale0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom'], 0]);
    var yAxis0 = d3.axisLeft(yScale0);
    var tmp_all_keys0 = [''].concat(legend_keys);
    var tmp_scale_px0 = [0];
    for (let i = 0; i < tmp_all_keys0.length - 1; ++i) {
        tmp_scale_px0.push(10 + i * rect_settings0["width"] +
            0.5 * (rect_settings0["width"] - rect_settings0['space']));
    }
    let tmp_xScale0 = d3.scaleOrdinal().range(tmp_scale_px0).domain(tmp_all_keys0);
    svg0.selectAll("myrect-prop-data")
        .data(prop_data_mixed0)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return rect_settings0["leftmargin"] + multiply0[i] * rect_settings0["width"];
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 8); ++j) {
                tmp += linear_func0(prop_data_mixed0[8 * Math.floor(i / 8) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func0(sums0[Math.floor(i / 8)])
                + tmp -
                rect_settings0['bottom'];
        })
        .attr("width", rect_settings0["width"] - rect_settings0["space"])
        .attr("height", function (d, i) {
            return linear_func0(d);
        })
        .attr("fill", function (d, i) {
            return prop_color0[i % 8];
        })
        .attr("class", "svg-DetailData-main")
        .append("title")
        .text(function (d, i) {
            return legend_keys[Math.floor(i / 8)]
        });
    svg0.append("g")
        .attr("class", "propData_Yaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," + rect_settings0['upper'] + " )")
        .call(yAxis0);
    svg0.append("g")
        .attr("class", "modal_Xaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," +
            (svg_settings["height"] - rect_settings0['bottom']) + " )")
        .call(d3.axisBottom(tmp_xScale0))
        .style("font-size", "10px");
    svg0.selectAll("myrect-prop-data")
        .data(prop_data_mixed0)
        .enter()
        .append("text")
        .attr("class", "numbers")
        .attr("transform",
            "translate(" + rect_settings0['leftmargin'] + ", 0)")
        .attr("x", function (d, i) {
            return multiply0[i] * rect_settings0["width"] + 12.5;
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 8); ++j) {
                tmp += linear_func0(prop_data_mixed0[8 * Math.floor(i / 8) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func0(sums0[Math.floor(i / 8)])
                + tmp -
                rect_settings0['bottom'] - 3;
        })
        .attr("alignment-baseline", "bottom")
        .text(function (d) {
            if (d == 0) return '';
            return d;
        })
        .attr("fill", "black")
        .style("font-size", "15px");
    svg0.append("text")
        .attr("x", rect_settings0["leftmargin"] - 40)
        .attr("y", rect_settings0["upper"] - 20)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "bottom")
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("rect")
        .attr("class", "lagend_rect")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 300)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30;
        })
        .attr("fill", function (d, i) { return prop_color0[i % 8] });
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("text")
        .attr("class", "lagend_text")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 220)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30 + 10;
        })
        .text(function (d) { return d })
        .attr("alignment-baseline", "middle");



    var svg = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", svg_settings['width'])       //设定宽度
        .attr("height", svg_settings['height'])    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "prop_data1")
        .style("clear", "both");
    var prop_data_mixed = [];
    var multiply = [];
    var tmp_cnt = 0;
    var sums = [];
    for (key in all_data['prop_data']) {
        var item = all_data['prop_data'][key];
        for (key2 in legend_keys) {
            prop_data_mixed.push(item[legend_keys[key2]]);
            multiply.push(Math.floor(tmp_cnt / 3));
            tmp_cnt += 1;
        }
        sums.push(item["合计项数"])
    }
    // console.log(prop_data_mixed)
    // console.log(multiply)
    // console.log(sums)
    var linear_func = d3.scaleLinear()
        .domain([0, d3.max(sums)])
        .range([0, svg_settings['height'] - rect_settings['upper'] - rect_settings['bottom']]);
    var yScale = d3.scaleLinear()
        .domain([0, d3.max(sums)])
        .range([svg_settings['height'] - rect_settings['upper'] - rect_settings['bottom'], 0]);
    var yAxis = d3.axisLeft(yScale);
    var tmp_all_keys = [''].concat(all_keys);
    var tmp_scale_px = [0];
    for (let i = 0; i < tmp_all_keys.length - 1; ++i) {
        tmp_scale_px.push(10 + i * rect_settings["width"] +
            0.5 * (rect_settings["width"] - rect_settings['space']));
    }
    let tmp_xScale = d3.scaleOrdinal().range(tmp_scale_px).domain(tmp_all_keys);
    svg.selectAll("myrect-prop-data")
        .data(prop_data_mixed)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return rect_settings["leftmargin"] + multiply[i] * rect_settings["width"];
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 3); ++j) {
                tmp += linear_func(prop_data_mixed[3 * Math.floor(i / 3) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func(sums[Math.floor(i / 3)])
                + tmp -
                rect_settings['bottom'];
        })
        .attr("width", rect_settings["width"] - rect_settings["space"])
        .attr("height", function (d, i) {
            return linear_func(d);
        })
        .attr("fill", function (d, i) {
            return prop_color1[i % 3];
        })
        .append("title")
        .text(function (d, i) {
            return all_keys[Math.floor(i / 3)]
        });
    svg.append("g")
        .attr("class", "propData_Yaxis")
        .attr("transform",
            "translate(" + (rect_settings['leftmargin'] - 10) + "," + rect_settings['upper'] + " )")
        .call(yAxis);
    svg.append("g")
        .attr("class", "modal_Xaxis")
        .attr("transform",
            "translate(" + (rect_settings['leftmargin'] - 10) + "," +
            (svg_settings["height"] - rect_settings['bottom']) + " )")
        .call(d3.axisBottom(tmp_xScale))
        .style("font-size", "10px");
    svg.selectAll("myrect-prop-data")
        .data(prop_data_mixed)
        .enter()
        .append("text")
        .attr("class", "numbers")
        .attr("transform",
            "translate(" + rect_settings['leftmargin'] + ", 0)")
        .attr("x", function (d, i) {
            return multiply[i] * rect_settings["width"] + 12.5;
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 3); ++j) {
                tmp += linear_func(prop_data_mixed[3 * Math.floor(i / 3) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func(sums[Math.floor(i / 3)])
                + tmp -
                rect_settings['bottom'] - 3;
        })
        .attr("alignment-baseline", "bottom")
        .text(function (d) {
            if (d == 0) return '';
            return d;
        })
        .attr("fill", "black")
        .style("font-size", "15px");
    svg.append("text")
        .attr("x", rect_settings["leftmargin"] - 40)
        .attr("y", rect_settings["upper"] - 20)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "bottom")
    svg.selectAll("legend")
        .data(legend_keys)
        .enter()
        .append("rect")
        .attr("class", "lagend_rect")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 300)
        .attr("y", function (d, i) {
            return rect_settings["upper"] + i * 30;
        })
        .attr("fill", function (d, i) { return prop_color1[i % 3] });
    svg.selectAll("legend")
        .data(legend_keys)
        .enter()
        .append("text")
        .attr("class", "lagend_text")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 220)
        .attr("y", function (d, i) {
            return rect_settings["upper"] + i * 30 + 10;
        })
        .text(function (d) { return d })
        .attr("alignment-baseline", "middle");
}

function initializeLocData() {
    // console.log("initializing loc data");
    var svg_settings = {
        width: 1500,
        height: 800,
    };
    var rect_settings0 = {
        leftmargin: 100,
        upper: 100,
        bottom: 100,
        width: 50,
        space: 15,
    };
    var loc_color0 = ['#F9B7B0', '#F9DEB0', '#E8F9B0', '#B0F9D3',
        '#B0E5F9', '#B0C5F9', '#CBB0F9', '#F9B0ED']

    var svg0 = d3.select("body")     //选择文档中的body元素
        .append("svg")          //添加一个svg元素
        .attr("width", svg_settings['width'])       //设定宽度
        .attr("height", svg_settings['height'])    //设定高度
        .attr("style", "text-align:center; display: none")
        .attr("id", "loc_data")
        .style("clear", "both");
    var loc_data_mixed0 = [];
    var multiply0 = [];
    var tmp_cnt0 = 0;
    var sums0 = [];
    var legend_keys = [];
    for (key2 in all_data['loc_data']) {
        legend_keys.push(key2);
        let item = all_data['loc_data'][key2]
        for (key in all_keys) {
            // console.log(item)
            // console.log(all_keys[key])
            loc_data_mixed0.push(item[all_keys[key] + "项数"]);
            multiply0.push(Math.floor(tmp_cnt0 / 8));
            tmp_cnt0 += 1;
        }
        sums0.push(item["合计项数"]);
    }
    var linear_func0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([0, svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom']]);
    var yScale0 = d3.scaleLinear()
        .domain([0, d3.max(sums0)])
        .range([svg_settings['height'] - rect_settings0['upper'] - rect_settings0['bottom'], 0]);
    var yAxis0 = d3.axisLeft(yScale0);
    var tmp_all_keys0 = [''].concat(legend_keys);
    var tmp_scale_px0 = [0];
    for (let i = 0; i < tmp_all_keys0.length - 1; ++i) {
        tmp_scale_px0.push(10 + i * rect_settings0["width"] +
            0.5 * (rect_settings0["width"] - rect_settings0['space']));
    }
    let tmp_xScale0 = d3.scaleOrdinal().range(tmp_scale_px0).domain(tmp_all_keys0);
    // console.log(loc_data_mixed0);
    svg0.selectAll("myrect-loc-data")
        .data(loc_data_mixed0)
        .enter()
        .append("rect")
        .attr("x", function (d, i) {
            return rect_settings0["leftmargin"] + multiply0[i] * rect_settings0["width"];
        })
        .attr("y", function (d, i) {
            let tmp = 0;
            for (let j = 0; j < (i % 8); ++j) {
                tmp += linear_func0(loc_data_mixed0[8 * Math.floor(i / 8) + j]);
            }
            // // console.log(tmp)
            return svg_settings['height'] - linear_func0(sums0[Math.floor(i / 8)])
                + tmp -
                rect_settings0['bottom'];
        })
        .attr("width", rect_settings0["width"] - rect_settings0["space"])
        .attr("height", function (d, i) {
            return linear_func0(d);
        })
        .attr("fill", function (d, i) {
            return loc_color0[i % 8];
        })
        .attr("class", "svg-DetailData-main")
        .append("title")
        .text(function (d, i) {
            let key = legend_keys[Math.floor(i / 8)];
            // console.log(all_data['loc_data'][key])
            return JSON.stringify(all_data['loc_data'][key]);
        });
    svg0.append("g")
        .attr("class", "locData_Yaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," + rect_settings0['upper'] + " )")
        .call(yAxis0);
    svg0.append("g")
        .attr("class", "modal_Xaxis")
        .attr("transform",
            "translate(" + (rect_settings0['leftmargin'] - 10) + "," +
            (svg_settings["height"] - rect_settings0['bottom']) + " )")
        .call(d3.axisBottom(tmp_xScale0))
        .style("font-size", "10px");
    svg0.append("text")
        .attr("x", rect_settings0["leftmargin"] - 40)
        .attr("y", rect_settings0["upper"] - 20)
        .text("项数(个)")
        .style("font-size", "15px")
        .attr("alignment-baseline", "bottom")
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("rect")
        .attr("class", "lagend_rect")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 300)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30;
        })
        .attr("fill", function (d, i) { return loc_color0[i % 8] })
        .style("cursor", "pointer")
        .attr("onclick", function (d, i) {
            return ("handleLocClick(" + i + ")");
        })
        .append("title")
        .text("点击获得详细信息");
    svg0.selectAll("legend")
        .data(all_keys)
        .enter()
        .append("text")
        .attr("class", "lagend_text")
        .attr("width", 60)
        .attr("height", 20)
        .attr("x", svg_settings["width"] - 220)
        .attr("y", function (d, i) {
            return rect_settings0["upper"] + i * 30 + 10;
        })
        .text(function (d) { return d })
        .attr("alignment-baseline", "middle")
        .style("cursor", "pointer")
        .attr("onclick", function (d, i) {
            return ("handleLocClick(" + i + ")");
        })
        .append("title")
        .text("点击获得详细信息");
    for (key_i in all_keys) {
        let key = all_keys[key_i];
        var local_settings = {
            upper: 50,
            bottom: 50,
            left: 50,
            right: 50,
        }
        var rect_settings = {
            width: 20,
            space: 4,
        }
        var item = all_data['loc_data'];
        // // console.log(d3.selectAll("#DetailData-Modal"))
        var modal_svg = d3.select("#DetailData-Modal").select("div")
            .append("svg")          //添加一个svg元素
            .attr("width", 550)       //设定宽度
            .attr("height", 550)    //设定高度
            .attr("style", "text-align: center; display: none")
            .attr("id", "LocData-Modal" + key)
            .attr("class", "LocData-Modal");
        var modal_mixed = [];
        for (key2 in item) {
            modal_mixed.push(item[key2][key + "项数"])
        }
        // console.log(modal_mixed)
        rect_settings['max'] = d3.max(loc_data_mixed0);
        rect_settings['left-margin'] = (550 - rect_settings['width'] * modal_mixed.length) / 2
        rect_settings['scale_func'] = d3.scaleLinear()
            .domain([0, rect_settings['max']])
            .range([0, 550 - local_settings['upper'] - local_settings['bottom']]);
        rect_settings['yScale'] = d3.scaleLinear()
            .domain([0, rect_settings['max']])
            .range([550 - local_settings['upper'] - local_settings['bottom'], 0]);
        rect_settings['yAxis'] = d3.axisLeft(rect_settings['yScale']);
        rect_settings['px_scale'] = [0];
        for (let i = 0; i < legend_keys.length; ++i) {
            rect_settings['px_scale']
                .push(5 + (i + 0.5) * rect_settings['width'] - 0.5 * rect_settings['space']);
        }
        // // console.log(rect_settings['px_scale'])
        // // console.log(key2s)
        let tmp_xScale = d3.scaleOrdinal().range(rect_settings['px_scale']).domain([''].concat(legend_keys));
        rect_settings['xAxis'] = d3.axisBottom(tmp_xScale);
        modal_svg.append("text")
            .attr("x", 10)
            .attr("y", 10)
            .text("\"" + key + "\"" + "项数地区明细")
            .style("font-size", "15px")
            .attr("alignment-baseline", "middle");
        modal_svg.selectAll("myrect" + key)
            .data(modal_mixed)
            .enter()
            .append("rect")
            .attr("x", function (d, i) {
                return (rect_settings['left-margin'] + i * rect_settings['width']);
            })
            .attr("y", function (d, i) {
                return 550 - rect_settings['scale_func'](d) - local_settings['bottom'];
            })
            .attr("width", rect_settings['width'] - rect_settings['space'])
            .attr("height", function (d, i) {
                return rect_settings['scale_func'](d);
            })
            .attr("fill", function (d, i) {
                return '#5DC0E1';
            })
            .attr("class", "svg-LocData-main" + key)
            .append("title")
            .text(function (d, i) {
                return (legend_keys[i] + ": " + d);
            });
        modal_svg.selectAll("myrect" + key)
            .data(modal_mixed)
            .enter()
            .append("text")
            .attr("class", "numbers")
            .attr("transform",
                "translate(" + rect_settings['left-margin'] + "," + local_settings['upper'] + ")")
            .attr("x", function (d, i) {
                return i * rect_settings['width'] + 5;
            })
            .attr("y", function (d) {
                return rect_settings['yScale'](d) - 5;
            })
            .attr("alignment-baseline", "middle")
            .text(function (d) {
                return d;
            })
            .style("font-size", "10px");
        modal_svg.append("g")
            .attr("class", "modal_Yaxis")
            .attr("transform",
                "translate(" + (rect_settings['left-margin'] - 5) + "," + local_settings['upper'] + " )")
            .call(rect_settings['yAxis']);
        modal_svg.append("g")
            .attr("class", "modal_Xaxis")
            .attr("transform",
                "translate(" + (rect_settings['left-margin'] - 5) + "," + (550 - local_settings['bottom']) + " )")
            .call(rect_settings['xAxis'])
            .style("font-size", "6px");
        modal_svg.append("text")
            .attr("x", rect_settings['left-margin'] - 35).attr("y", local_settings["upper"] - 3)
            .text("项数(个)")
            .style("font-size", "10px")
            .attr("alignment-baseline", "bottom")
    }
}

function handleLocClick(i) {
    let key = all_keys[i];
    var modal = document.getElementById('DetailData-Modal');
    modal.style.display = 'block';
    d3.select("#LocData-Modal" + key).style("display", "block");
}

function initializeData() {
    initializeDetailData();
    initializeCorrData();
    initializePropData();
    initializeLocData();
    handleDetailData();
}
